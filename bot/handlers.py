import time
import logging
from telegram import Update
from telegram.ext import ContextTypes
from database.database import AsyncSessionLocal
from database.crud import (
    get_or_create_user, save_message, get_conversation_context,
    get_or_create_active_session, get_or_create_client_profile,
    update_client_profile, clear_user_history, finish_session
)
from services.openai_service import OpenAIService

logger = logging.getLogger(__name__)
openai_service = OpenAIService()


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    welcome_message = f"""–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first_name}! üåü

–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –≥–ª—É–±–∏–Ω–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω–∞—Ö –¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –ø–æ–≤–µ–¥–µ–Ω–∏—è –∏ –Ω–∞–π—Ç–∏ –ø—É—Ç—å –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏.

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/finishsession - –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –∏ –ø–æ–ª—É—á–∏—Ç—å —Å–∞–º–º–∞—Ä–∏
/help - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º  
/clear - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–±–æ –º–Ω–µ

–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    
    await update.message.reply_text(welcome_message)


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_message = """üîç **–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–µ—Ä–∞–ø–∏—è:**

–Ø –ø–æ–º–æ–≥–∞—é –≤—ã—è–≤–∏—Ç—å –Ω–µ–æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã —Å–∞–º–æ—Ä–∞–∑—Ä—É—à–∞—é—â–µ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –≥–ª—É–±–∏–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –†–∞–±–æ—Ç–∞—é –ø–æ—ç—Ç–∞–ø–Ω–æ:

1. **–í—ã—è–≤–ª–µ–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–∞** - —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç
2. **–ü–æ–∏—Å–∫ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤** - —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç –¥–µ—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ  
3. **–ê–Ω–∞–ª–∏–∑ –∫–æ—Ä–Ω–µ–π** - —Å–≤—è–∑—å —Å –¥–µ—Ç—Å–∫–∏–º–∏ —Ç—Ä–∞–≤–º–∞–º–∏, —É—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏
4. **–†–∞–±–æ—Ç–∞ —Å –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ–º** - –≤—Å–∫—Ä—ã—Ç–∏–µ —Å–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π

**–ö–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `/start` - –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ
‚Ä¢ `/finishsession` - –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é —Å —Å–∞–º–º–∞—Ä–∏
‚Ä¢ `/clear` - —É–¥–∞–ª–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é
‚Ä¢ `/help` - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

**–ü—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã:**
‚úì –û–¥–∏–Ω –≥–ª—É–±–æ–∫–∏–π –≤–æ–ø—Ä–æ—Å –∑–∞ —Ä–∞–∑
‚úì –ù–∏–∫–∞–∫–∏—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤
‚úì –§–æ–∫—É—Å –Ω–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ—Ä–Ω—è—Ö –ø—Ä–æ–±–ª–µ–º—ã
‚úì –î–µ–ª–∏–∫–∞—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –∑–∞—â–∏—Ç–Ω—ã–º–∏ –º–µ—Ö–∞–Ω–∏–∑–º–∞–º–∏

–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ç–µ–º, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç - –Ω–∞—á–Ω—ë–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ."""
    
    await update.message.reply_text(help_message, parse_mode='Markdown')


async def clear_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /clear"""
    async with AsyncSessionLocal() as db:
        success = await clear_user_history(db, update.effective_user.id)
        
        if success:
            message = """‚úÖ –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã:

‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
‚Ä¢ –°–µ—Å—Å–∏–∏ —Ç–µ—Ä–∞–ø–∏–∏  
‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞
‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ

–ú–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start"""
        else:
            message = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    
    await update.message.reply_text(message)


async def finish_session_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /finishsession"""
    user_id = update.effective_user.id
    
    async with AsyncSessionLocal() as db:
        try:
            session_summary = await finish_session(db, user_id)
            
            if session_summary:
                summary_message = f"""üéØ **–°–∞–º–º–∞—Ä–∏ —Å–µ—Å—Å–∏–∏:**

{session_summary}

–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∞—á–Ω—ë—Ç—Å—è –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è."""
            else:
                summary_message = "üìù –ê–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –¥–ª—è {user_id}: {e}")
            summary_message = "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏."
    
    await update.message.reply_text(summary_message, parse_mode='Markdown')


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user = update.effective_user
    user_message = update.message.text
    start_time = time.time()
    
    async with AsyncSessionLocal() as db:
        try:
            # –ü–æ–ª—É—á–∞–µ–º/—Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            db_user = await get_or_create_user(
                db, user.id, user.username, user.first_name, user.last_name
            )
            
            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é
            session_id = await get_or_create_active_session(db, user.id)
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞
            client_profile = await get_or_create_client_profile(db, user.id)
            profile_dict = {
                'identified_patterns': client_profile.identified_patterns,
                'core_traumas': client_profile.core_traumas,
                'emotional_triggers': client_profile.emotional_triggers,
                'defense_mechanisms': client_profile.defense_mechanisms,
                'breakthrough_moments': client_profile.breakthrough_moments,
                'resistance_areas': client_profile.resistance_areas,
                'therapeutic_notes': client_profile.therapeutic_notes
            }
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã
            context_messages = await get_conversation_context(db, user.id, limit=20)
            
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç OpenAI
            bot_response, profile_updates = await openai_service.get_response(
                user_message, context_messages, profile_dict
            )
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞
            if profile_updates:
                await update_client_profile(db, user.id, profile_updates)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            response_time = int((time.time() - start_time) * 1000)
            await save_message(
                db, user.id, update.message.message_id,
                user_message, bot_response, session_id, response_time
            )
            
            await update.message.reply_text(bot_response)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {user.id}: {e}")
            await update.message.reply_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –Ω–æ –Ω–∞—à–∞ —Å–µ—Å—Å–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è. "
                "–Ø –≥–æ—Ç–æ–≤ –≤–∞—Å –≤—ã—Å–ª—É—à–∞—Ç—å –∏ –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ç–µ–º, —á—Ç–æ –≤–∞—Å —Ç—Ä–µ–≤–æ–∂–∏—Ç."
            )


async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ: {context.error}")
    
    if update and update.effective_message:
        try:
            await update.effective_message.reply_text(
                "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –Ø —É–∂–µ —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ –µ—ë —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º. "
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç."
            )
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {e}"))